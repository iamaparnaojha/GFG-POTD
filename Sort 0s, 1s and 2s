PROBLEM:
Sort 0s, 1s and 2s

Given an array arr[] containing only 0s, 1s, and 2s. Sort the array in ascending order.

Examples:

Input: arr[] = [0, 1, 2, 0, 1, 2]
Output: [0, 0, 1, 1, 2, 2]
Explanation: 0s 1s and 2s are segregated into ascending order.
Input: arr[] = [0, 1, 1, 0, 1, 2, 1, 2, 0, 0, 0, 1]
Output: [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2]
Explanation: 0s 1s and 2s are segregated into ascending order.
Constraints:
1 <= arr.size() <= 106
0 <= arr[i] <= 2

CODE:
class Solution {
  public:
    void sort012(vector<int>& arr) {
        int n=arr.size(), zero=0,two=n-1,i=0;
        while(i<=two){
            if(arr[i]==0){
             swap(arr[zero],arr[i]) ;
             zero++;
            }
            else if(arr[i]==2){
              swap(arr[two],arr[i]);
              two--;
              i--;
            }
            i++;
        }
    }
};
