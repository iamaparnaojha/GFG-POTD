PROBLEM:
Maximum Product Subarray
Given an array arr[] that contains positive and negative integers (may contain 0 as well). Find the maximum product that we can get in a subarray of arr.

Note: It is guaranteed that the output fits in a 32-bit integer.


CODE:
class Solution {
  public:
    // Function to find maximum product subarray
    int maxProduct(vector<int> &arr) {
        // Your Code Here
         if (arr.empty()) return 0; // Handle empty array case  

    int max_product = arr[0];  
    int current_max = arr[0];  
    int current_min = arr[0];  

    for (size_t i = 1; i < arr.size(); ++i) {  
        int num = arr[i];  
    
        if (num < 0) {  
            swap(current_max, current_min);  
        }  
        
        current_max = max(num, current_max * num);  
        current_min = min(num, current_min * num);  
    
        max_product = max(max_product, current_max);  
    }  

    return max_product;  
    }
};
