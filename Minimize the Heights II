Problem: 
Given an array arr[] denoting heights of N towers and a positive integer K.

For each tower, you must perform exactly one of the following operations exactly once.

Increase the height of the tower by K
Decrease the height of the tower by K
Find out the minimum possible difference between the height of the shortest and tallest towers after you have modified each tower.

Note: It is compulsory to increase or decrease the height by K for each tower. After the operation, the resultant array should not contain any negative integers.

Solution: 
class Solution {
  public:
    int getMinDiff(vector<int> &arr, int k) {
       

int n =arr.size();
        if(n==1){
            return 0;
        }
        sort(arr.begin(),arr.end());
        int ans = arr[n-1] - arr[0];
        
        for(int i = 0;i<n;i++){
            if(arr[i] < k) continue;
            
            int minHeight = min(arr[0] + k, arr[i] -k );
            int maxHeight = max(arr[n-1] -k, arr[i-1]+k);
            
            ans = min(ans,maxHeight - minHeight);
        }
        return ans;
      
    }
};
